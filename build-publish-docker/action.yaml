name: "build-publish-docker"

description: "Builds and pushes a Docker image to a registry with caching."

inputs:
  registry:
    description: "Docker registry to push the image to"
    required: true
  image_name:
    description: "Name of the Docker image"
    required: true
  registry_username:
    description: "Username for the Docker registry"
    required: true
  registry_password:
    description: "Password for the Docker registry"
    required: true
  version:
    description: "Version tag for the image"
    required: true
  dockerfile_context:
    description: "Dockerfile build context"
    required: true

outputs:
  metadata:
    description: "Metadata of the Docker image"
    value: ${{ steps.set_output.outputs.metadata }}

runs:
  using: "composite"
  steps:

    - name: Validate required inputs
      shell: bash
      run: |
        if [ -z "${{ inputs.registry }}" ]; then
          echo "Missing required input: registry"
          exit 1
        fi

        if [ -z "${{ inputs.image_name }}" ]; then
          echo "Missing required input: image_name"
          exit 1
        fi

        if [ -z "${{ inputs.registry_username }}" ]; then
          echo "Missing required input: registry_username"
          exit 1
        fi

        if [ -z "${{ inputs.registry_password }}" ]; then
          echo "Missing required input: registry_password"
          exit 1
        fi

        if [ -z "${{ inputs.version }}" ]; then
          echo "Missing required input: version"
          exit 1
        fi

        if [ -z "${{ inputs.dockerfile_context }}" ]; then
          echo "Missing required input: dockerfile_context"
          exit 1
        fi

    - uses: docker/setup-buildx-action@v3

    - uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.registry_username }}
        password: ${{ inputs.registry_password }}

    - id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.registry }}/${{ inputs.image_name }}
        tags: |
          type=raw,value={{branch}}-{{sha}}-${{inputs.version}},enable={{is_default_branch}},priority=80
          type=raw,value={{branch}}-latest,priority=0
          type=raw,value=${{inputs.version}}

    - id: set_output
      run: |
        echo "metadata=${{ steps.meta.outputs }}" >> $GITHUB_OUTPUT
      shell: bash

    - uses: docker/build-push-action@v6
      with:
        context: ${{ inputs.dockerfile_context }}
        file: ${{ inputs.dockerfile_context }}/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=registry,ref=${{ inputs.registry }}/${{ inputs.image_name }}:buildcache
        cache-to: type=registry,ref=${{ inputs.registry }}/${{ inputs.image_name }}:buildcache,mode=max
